<!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
    <meta charset="UTF-8">
    <title>Z3D</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <link href='' rel='stylesheet' type='text/css'>
</head>
<body>

<style>
    @font-face {
        font-family: z3d;
        src: url("/fonts/HelpMe.ttf");
    }

    body {
        background: #333;
        color: #ccc;
    }

    #landing-page {
        width: 100vw;
        height: 100vh;
    }

    .column {
        flex-direction: column;
    }
    .d-flex {
        display: flex;
    }
    .lp-zombie-hand {
        position: absolute;
        bottom: 0;
        height: 100%;
        width: 40%;
        z-index: -1;
    }
    #lp-title {
        position: relative;
        top: 320px;

        color: #7C0404;
        text-shadow: -2px 0 white, 0 2px white, 2px 0 white, 0 -2px white;
        font-size:256px;
        font-family: z3d!important;

    }
</style>

<div id="landing-page" class="container-fluid d-flex">
    <div class="col py-5 d-flex flex-column justify-content-between align-items-stretch">


        <div class="row">
            <div class="col">

                <div class="input-group mb-3">
                    <button class="btn btn-danger" type="button" id="set-gamename-button">Set username</button>
                    <input type="text" class="form-control" id="set-gamename" value="<%= user.gamename %>" aria-describedby="button-addon1">
                </div>

            </div>
        </div>

        <div>

            <div class="row">
                <div class="col">

                    <div class="input-group mb-3">
                        <button class="btn btn-danger" type="button" id="create-game-button">Create room</button>
                        <input id="create-game-title" type="text" class="form-control" placeholder="" aria-label="Example text with button addon" aria-describedby="button-addon1">
                        <span class="input-group-text text-danger">Private?</span>

                        <div class="input-group-text">
                            <input id="create-game-private" class="form-check-input mt-0" type="checkbox" value="" aria-label="Checkbox for following text input">
                        </div>
                    </div>

                    <!--                <label class="form-label" for="create-game-map">Map</label>-->
                    <!--                <div class="input-group mb-3">-->
                    <!--                    <select class="form-select" name="create-game-map" id="create-game-map">-->
                    <!--                        <option value="">Chose a map</option>-->
                    <!--                    </select>-->
                    <!--                </div>-->
                </div>
            </div>

            <div class="row">

                <div class="d-flex justify-content-between">
                    <h2>Public games</h2>
                    <button class="btn btn-secondary m-1" id="refresh-btn">Refresh</button>
                </div>


                <div class="container">
                    <table id="games-table" class="">
                        <thead>
                            <tr class="">
                                <th scope="col">Name</th>
                                <th scope="col">Map</th>
                                <th scope="col">Status</th>
                                <th scope="col">Players</th>
                                <th scope="col">Ping</th>
                            </tr>
                        </thead>
                        <tbody id="public-games-tbody">
                        </tbody>
                    </table>
                </div>

            </div>

        </div>


    </div>

    <div class="col">
        <div class="row justify-content-center">
            <h1 id="lp-title" class="red text-center">Z3D</h1>
        </div>
        <div class="row lp-zombie-hand-div justify-content-center">
            <img class="lp-zombie-hand img-fluid" src="img/zombie-hand.png">
        </div>
    </div>

</div>

<script>
    const refreshBtn = document.getElementById('refresh-btn')
    const gamesTable = document.getElementById('games-table')
    const gamesTableBody = document.getElementById('public-games-tbody')

    const createGameButton = document.getElementById('create-game-button')
    const createGameTitle = document.getElementById('create-game-title')
    const createGamePrivate = document.getElementById('create-game-private')

    const httpHeadersOption = {
        method: 'GET',
        headers: {}
    }

    let lastRefresh = Date.now()
    const resfreshRate = 1000

    refreshBtn.addEventListener('click', () => {
        if (lastRefresh + resfreshRate < Date.now()) {
            refresh();
            lastRefresh = Date.now()
        }
    })

    createGameButton.addEventListener('click', (e) => {
        e.preventDefault()
        if (
            createGameTitle.value !== ''
        ) {
            window.location.assign('/game/create/' + createGameTitle.value + '/' + createGamePrivate.checked)
        }

    })

    function refresh() {
        fetch('/lp/refresh', httpHeadersOption)
            .then(response => response.json())
            .then(body => {
                createTable(body)
            });
    }

    function createTable(body) {
        gamesTableBody.replaceChildren();

        for (let i = 0; i < body.length; i++) {
            gamesTableBody.appendChild(createRow(body[i]))
        }

    }

    function createRow(gameConf) {
        const row = document.createElement('tr')

        row.appendChild(createTd(gameConf.name))
        row.appendChild(createTd(gameConf.map))
        row.appendChild(createTd(gameConf.status))
        row.appendChild(createTd(gameConf.players))
        row.appendChild(createTd(gameConf.ping))

        const td = createTd()
        td.appendChild(createLink('Join', '/game/'+gameConf.id))
        row.appendChild(td)

        return row
    }

    function createTd(innerText = '') {
        const td = document.createElement('td')
        td.innerText = innerText
        return td
    }

    function createLink(innerText, link) {
        const a = document.createElement('a')
        a.innerText = innerText
        a.href = link
        a.classList.add('btn', 'btn-success')
        return a
    }

    refresh()

    function setUsername() {
        const usernameButton = document.getElementById('set-gamename-button')
        const gamename = document.getElementById('set-gamename')

        usernameButton.addEventListener('click', async () => {
            if (gamename.value.length > 0) {
                const res = await fetch('/player/username/set', {
                    method: 'POST',
                    body: JSON.stringify({gamename: gamename.value}),
                    headers: {
                        "Content-Type": "application/json"
                    },
                })
                const ress = await res.json()
                console.log(ress)

            }
        })
    }
    setUsername()

    // const mapSelect = document.getElementById('create-game-map')
    // function getMaps() {
    //     fetch('/lp/maps', httpHeadersOption)
    //         .then(response => response.json())
    //         .then(body => {
    //             for (const mapFile of body) {
    //                 const option = document.createElement('option')
    //                 option.innerText = mapFile
    //                 option.value = mapFile
    //                 mapSelect.append(option)
    //             }
    //         });
    // }
    // getMaps()
</script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
</body>
</html>